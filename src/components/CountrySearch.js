import React, { useState } from "react";

/**
 * üó∫Ô∏è Componente BuscaPais
 * 
 * Este componente √© um exemplo pr√°tico de como criar uma interface de busca de pa√≠ses
 * usando a API Rest Countries. √â perfeito para aprender:
 * 
 * üìö Conceitos Demonstrados:
 * - Gerenciamento de estado com useState
 * - Requisi√ß√µes HTTP ass√≠ncronas com fetch
 * - Tratamento de erros e loading states
 * - Manipula√ß√£o de eventos (onChange, onKeyPress)
 * - Renderiza√ß√£o condicional
 * - Feedback visual para o usu√°rio
 * 
 * üéØ Objetivos de Aprendizado:
 * 1. Entender como fazer requisi√ß√µes HTTP em React
 * 2. Aprender a gerenciar m√∫ltiplos estados
 * 3. Implementar tratamento de erros
 * 4. Criar interfaces responsivas e amig√°veis
 * 
 * @example
 * // Como usar o componente
 * <BuscaPais />
 * 
 * // Exemplo de resultado
 * {
 *   name: { common: "Brasil" },
 *   capital: ["Bras√≠lia"],
 *   population: 212559417,
 *   region: "Americas",
 *   languages: { por: "Portugu√™s" }
 * }
 */
function BuscaPais() {
  // Estados para gerenciar o formul√°rio e dados
  const [pais, setPais] = useState(""); // Nome do pa√≠s digitado pelo usu√°rio
  const [dadosPais, setDadosPais] = useState(null); // Dados retornados da API
  const [carregando, setCarregando] = useState(false); // Controla o estado de loading
  const [erro, setErro] = useState(null); // Armazena mensagens de erro

  /**
   * üîç Fun√ß√£o para buscar dados do pa√≠s na API
   * 
   * Esta fun√ß√£o demonstra:
   * - Uso de async/await para requisi√ß√µes HTTP
   * - Tratamento de erros com try/catch
   * - Valida√ß√£o de dados
   * - Gerenciamento de estados de loading
   * 
   * @async
   * @function buscarPais
   * @returns {Promise<void>}
   */
  const buscarPais = async () => {
    // Valida√ß√£o b√°sica do input
    if (!pais.trim()) {
      setErro("Por favor, digite o nome de um pa√≠s");
      return;
    }

    // Reset dos estados antes da nova busca
    setCarregando(true);
    setErro(null);
    setDadosPais(null);

    try {
      // Faz a requisi√ß√£o para a API
      const resposta = await fetch(`https://restcountries.com/v3.1/name/${pais}`);
      
      // Verifica se a resposta foi bem sucedida
      if (!resposta.ok) {
        throw new Error("Pa√≠s n√£o encontrado");
      }

      // Processa os dados da resposta
      const dados = await resposta.json();
      console.log("Dados do pa√≠s:", dados);
      setDadosPais(dados[0]);
    } catch (erro) {
      console.error("Erro ao buscar pa√≠s:", erro);
      setErro(erro.message);
    } finally {
      setCarregando(false);
    }
  };

  /**
   * ‚å®Ô∏è Fun√ß√£o para lidar com a tecla Enter no input
   * 
   * Permite buscar o pa√≠s pressionando Enter
   * 
   * @param {KeyboardEvent} evento - Evento do teclado
   */
  const lidarComTecla = (evento) => {
    if (evento.key === 'Enter') {
      buscarPais();
    }
  };

  return (
    <div className="busca-pais">
      {/* Formul√°rio de busca */}
      <div className="container-busca">
        <input
          type="text"
          value={pais}
          onChange={(e) => setPais(e.target.value)}
          onKeyPress={lidarComTecla}
          placeholder="Digite o nome do pa√≠s"
          aria-label="Nome do pa√≠s"
        />
        <button 
          onClick={buscarPais} 
          disabled={carregando}
          aria-label="Buscar pa√≠s"
        >
          {carregando ? "Buscando..." : "Buscar"}
        </button>
      </div>

      {/* Mensagens de feedback */}
      {erro && (
        <div className="mensagem-erro" role="alert">
          {erro}
        </div>
      )}
      
      {carregando && (
        <div className="carregando" role="status">
          Carregando informa√ß√µes do pa√≠s...
        </div>
      )}
      
      {/* Exibi√ß√£o dos dados do pa√≠s */}
      {dadosPais && (
        <div className="card-pais">
          <h3>{dadosPais.name.common}</h3>
          <div className="info-pais">
            <p><strong>Capital:</strong> {dadosPais.capital}</p>
            <p><strong>Popula√ß√£o:</strong> {dadosPais.population.toLocaleString()}</p>
            <p><strong>Regi√£o:</strong> {dadosPais.region}</p>
            <p><strong>Sub-regi√£o:</strong> {dadosPais.subregion}</p>
            <p><strong>Idiomas:</strong> {Object.values(dadosPais.languages).join(", ")}</p>
          </div>
          {dadosPais.flags && (
            <div className="bandeira-pais">
              <img 
                src={dadosPais.flags.png} 
                alt={`Bandeira de ${dadosPais.name.common}`}
                style={{ maxWidth: '200px', marginTop: '1rem' }}
              />
            </div>
          )}
        </div>
      )}
    </div>
  );
}

export default BuscaPais; 